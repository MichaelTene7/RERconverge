optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
$results.init

 loglikelihood: -79599.46 

unconstrained loglikelihood: -10353.72 

Rate matrix:
  a c g t
a 0 1 1 1
c 1 0 1 1
g 1 1 0 1
t 1 1 1 0

Base frequencies:  
0.25 0.25 0.25 0.25 

$results.opt

 loglikelihood: -28775.42 

unconstrained loglikelihood: -10353.72 
Proportion of invariant sites: 0.1568851 

Rate matrix:
  a c g t
a 0 1 1 1
c 1 0 1 1
g 1 1 0 1
t 1 1 1 0

Base frequencies:  
0.25 0.25 0.25 0.25 

$tree.opt

Phylogenetic tree with 43 tips and 41 internal nodes.

Tip labels:
	ailMel1, lepWed1, odoRosDi, musFur1, canFam3, felCat5, ...

Unrooted; includes branch lengths.


> #add-on functions for creating trees for use with RERconverge
> require(phangorn)

> require(phytools)

> require(tools) #may be unnecessary for tree estimation functions but useful for

> #versioning in R
> pruneAlnFromTree = function(alnfile, treefile, type = "AA", format = "fasta", writealn=TRUE) {
+   #prune the alignment to have o .... [TRUNCATED] 

> pruneTreeFromAln = function (treefile, alnfile, type = "AA", format = "fasta", writetree=TRUE) {
+   #prune the tree to have only the species in the .... [TRUNCATED] 

> #' Estimate a ML tree from a given topology
> #' Uses `pml` and `optim.pml` from the `phangorn` package to estimate the tree.
> 
> #' @param alnfile .... [TRUNCATED] 

> #' Estimates a ML trees from a given topology for a list of alignments. Wirtes a text file compatble with readTrees().
> #' Uses `pml` and `optim.pm .... [TRUNCATED] 

> #add-on functions for creating trees for use with RERconverge
> require(phangorn)

> require(phytools)

> require(tools) #may be unnecessary for tree estimation functions but useful for

> #versioning in R
> pruneAlnFromTree = function(alnfile, treefile, type = "AA", format = "fasta", writealn=TRUE) {
+   #prune the alignment to have o .... [TRUNCATED] 

> pruneTreeFromAln = function (treefile, alnfile, type = "AA", format = "fasta", writetree=TRUE) {
+   #prune the tree to have only the species in the .... [TRUNCATED] 

> #' Estimate a ML tree from a given topology
> #' Uses `pml` and `optim.pml` from the `phangorn` package to estimate the tree.
> 
> #' @param alnfile .... [TRUNCATED] 

> #' Estimates a ML trees from a given topology for a list of alignments. Wirtes a text file compatble with readTrees().
> #' Uses `pml` and `optim.pm .... [TRUNCATED] 
optimize edge weights:  -79599.46 --> -29316.22 
optimize invariant sites:  -29316.22 --> -28777.45 
optimize edge weights:  -28777.45 --> -28775.83 
optimize invariant sites:  -28775.83 --> -28775.59 
optimize edge weights:  -28775.59 --> -28775.49 
optimize invariant sites:  -28775.49 --> -28775.45 
optimize edge weights:  -28775.45 --> -28775.43 
optimize invariant sites:  -28775.43 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
optimize invariant sites:  -28775.42 --> -28775.42 
optimize edge weights:  -28775.42 --> -28775.42 
